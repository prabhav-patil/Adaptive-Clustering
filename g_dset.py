# -*- coding: utf-8 -*-
"""g_dset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RTnx78uGlwgMvXHw32PT3UhlyV6_O_NY
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
# stored as array the values of mean and SDs and mixing coefficients
# N1[2/3,-1,1] N2[1/6,0,1], N3[1/6,1,1]
mu = [0, 0, 3.5]
sigma = [1.414, 1.414, 1.414]
p_i = [1/4, 1/4, 1/2]
n = 10000

# empty array
x = []
for i in range(n):
    z_i = np.argmax(np.random.multinomial(1, p_i))
    x_i = np.random.normal(mu[z_i], sigma[z_i])
    x.append(x_i)

def univariate_normal(x, mean, variance):
    return ((1. / np.sqrt(2 * np.pi * variance)) * np.exp(-(x - mean)**2 / (2 * variance)))

a = np.arange(-40, 40, 0.01)
y = p_i[0] * univariate_normal(a, mean=mu[0], variance=sigma[0]**2) + p_i[1] * univariate_normal(a, mean=mu[1], variance=sigma[0]**2)+ p_i[2] * univariate_normal(a, mean=mu[2], variance=sigma[0]**2)

fig, ax = plt.subplots(figsize=(10, 5))

ax.hist(x, bins=100, density=True)
ax.plot(a, y)

